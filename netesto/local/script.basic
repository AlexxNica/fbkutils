#
# Sample basic script
# replace variable values appropriately before running
# Run by: ./netesto.py [-d | --debug=netesto.log] < script.basic
#

HOST_SUFFIX <suffix>    # Example: mynetwork.com
SOURCE inlib
SET instances=1         # how many flow instances per host
SET reps=1              # how many macro instances to run
SET dur=60              # duration of test in seconds
SET server1=<server1>   # specify server. Example kerneltest101
SET server2=<server2>   # specify another server
SET client1=<client1>   # specify client. Example kerneltest102
SET client2=<client2>   # specify client. Example kerneltest103
DESC simple_script      # specify descripiton
SET ca=cubic            # will use TCP-Cubic
SET doRPC=1             # whether to run RPC tests
SET req=1M              # use RPC request size of 1MB
                        # Clients send requests, servers replies
                        # The tool expects clients to send large requests
                        # so it collects flow information on the clients
SET reply=1             # use RPC reply size of 1 byte
SET doSTREAM=1          # whether to run STREAM tests
SET randDelay=0.1       # wait between 0 and 0.1 secs before staring flows
                        # introduces randomness necessary when running the
                        # same test multiple times


# Define commands to run before each test
# 
# On Server(s)
#
BEGIN preServer
# set large receive buffers in server
SET_SYSCTL host=$host net.ipv4.tcp_rmem=10000,262144,20971520
END preServer
#
# On Client(s)
#
BEGIN preClient
# set large send buffers in client
SET_SYSCTL host=$host net.ipv4.tcp_wmem=10000,262144,20971520
END preClient


# 1 client, 1 server, RPC and STREAM
#
IF $doRPC: RUN MServerRR,$reps exp=COUNTER servers=$server1 clients=$client1 expName=1h1fr ca=$ca dur=$dur delay=0 instances=$instances reqs=$req reply=$reply

IF $doSTREAM: RUN MServerStream,$reps exp=COUNTER servers=$server1 clients=$client1 expName=1h1fs ca=$ca dur=$dur delay=0 instances=$instances 

# If you want a larger delay (specified in ms), you can use netem on a given host
SET_NETEM host=$server1 netem_delay=10

# Add values to other columns in exp.csv. This columns must be specified in the file
# "fields.txt". Only change "fields.txt"  before you start a new series of experiments;
# that is, when there is no exp.html or exp.csv
OTHER netem=10

IF $doRPC: RUN MServerRR,$reps exp=COUNTER servers=$server1 clients=$client1 expName=1h1fr ca=$ca dur=$dur delay=0 instances=$instances reqs=$req reply=$reply
 
IF $doSTREAM: RUN MServerStream,$reps exp=COUNTER servers=$server1 clients=$client1 expName=1h1fs ca=$ca dur=$dur delay=0 instances=$instances

# Reset delay
SET_NETEM host=$server1 netem_delay=0
OTHER netem=0

# You can also use multiple servers and clients and specify multiple CAs (one test per ca)
RUN MServerRR servers=$server1,$server2 clients=$client1,$client2 expName=2s2c3fr ca=cubic,reno dur=$dur delay=0 instances=$instances reqs=1M,1M,10K reply=$reply

RUN MServerStream servers=$server1,$server2 clients=$client1,$client2 expName=2s2c1fs ca=cubic,reno dur=$dur delay=0 instances=$instances

END
